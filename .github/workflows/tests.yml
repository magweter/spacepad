name: Tests

on:
  push:
    branches:
      - main
      - dev
    paths:
      - 'backend/**'
      - '.github/workflows/tests.yml'
  pull_request:
    branches:
      - main
      - dev
    paths:
      - 'backend/**'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: spacepad_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, mysql
          coverage: xdebug

      - name: Copy .env
        working-directory: backend
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Get Composer Cache Directory
        working-directory: backend
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('backend/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies
        working-directory: backend
        run: |
          composer self-update
          composer install --prefer-dist --no-progress --no-scripts
          composer dump-autoload

      - name: Generate key
        working-directory: backend
        run: php artisan key:generate

      - name: Directory Permissions
        working-directory: backend
        run: chmod -R 777 storage bootstrap/cache

      - name: Create Database
        working-directory: backend
        run: |
          mysql -u root -ppassword -e "CREATE DATABASE IF NOT EXISTS spacepad_test;"
          php artisan migrate --env=testing

      - name: Execute tests (via Pest)
        working-directory: backend
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: spacepad_test
          DB_USERNAME: root
          DB_PASSWORD: password
        run: vendor/bin/pest --coverage-text --coverage-clover=coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: backend/coverage.xml
          fail_ci_if_error: true 